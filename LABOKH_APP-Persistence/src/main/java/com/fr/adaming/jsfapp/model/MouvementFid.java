package com.fr.adaming.jsfapp.model;

// Generated 13 nov. 2015 10:42:14 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fr.adaming.jsfapp.utils.IConstants;

/**
 * MouvementFid generated by hbm2java
 */
@Entity
@Table(name = "mouvement_fid", catalog = IConstants.SCHEMA)
public class MouvementFid implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = -3540795061566749102L;
	private long idMouvement;
	private PackCadeaux packCadeaux;
	private Utilisateur utilisateur;
	private Facture facture;
	private CompteFidelite compteFidelite;
	private Date date;
	private Long montant;
	private String typeMvt;
	private Boolean FActif;
	private Boolean statut;
	private String CVC;
	private String numOR;

	private Set<Facture> factures = new HashSet<Facture>(0);

	public MouvementFid() {
	}

	public MouvementFid(long idMouvement) {
		this.idMouvement = idMouvement;
	}

	public MouvementFid(long idMouvement, PackCadeaux packCadeaux, Utilisateur utilisateur, Facture facture,
			CompteFidelite compteFidelite, Date date, String typeMvt, Boolean FActif, Set<Facture> factures) {
		this.idMouvement = idMouvement;
		this.packCadeaux = packCadeaux;
		this.utilisateur = utilisateur;
		this.facture = facture;
		this.compteFidelite = compteFidelite;
		this.date = date;
		this.typeMvt = typeMvt;
		this.FActif = FActif;
		this.factures = factures;
	}

	@Id
	@Column(name = "ID_MOUVEMENT", unique = true, nullable = false, precision = 18, scale = 0)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public long getIdMouvement() {
		return this.idMouvement;
	}

	public void setIdMouvement(long idMouvement) {
		this.idMouvement = idMouvement;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_PACK", nullable = true)
	public PackCadeaux getPackCadeaux() {
		return this.packCadeaux;
	}

	public void setPackCadeaux(PackCadeaux packCadeaux) {
		this.packCadeaux = packCadeaux;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_USER")
	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_FACTURE", nullable = true)
	public Facture getFacture() {
		return this.facture;
	}

	public void setFacture(Facture facture) {
		this.facture = facture;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ID_CMPT_FEDILITE")
	public CompteFidelite getCompteFidelite() {
		return this.compteFidelite;
	}

	public void setCompteFidelite(CompteFidelite compteFidelite) {
		this.compteFidelite = compteFidelite;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE", length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "TYPE_MVT")
	public String getTypeMvt() {
		return this.typeMvt;
	}

	public void setTypeMvt(String typeMvt) {
		this.typeMvt = typeMvt;
	}

	@Column(name = "F_ACTIF")
	public Boolean getFActif() {
		return this.FActif;
	}

	public void setFActif(Boolean FActif) {
		this.FActif = FActif;
	}

	@Column(name = "MONTANT_MOUVEMENT")
	public Long getMontant() {
		return montant;
	}

	public void setMontant(Long montant) {
		this.montant = montant;
	}

	@Column(name = "STATUT", columnDefinition = "BIT")
	public Boolean getStatut() {
		return statut;
	}

	public void setStatut(Boolean statut) {
		this.statut = statut;
	}

	@Column(name = "CVC")
	public String getCVC() {
		return CVC;
	}

	public void setCVC(String cVC) {
		CVC = cVC;
	}

	@Column(name = "NUM_OR")
	public String getNumOR() {
		return numOR;
	}

	public void setNumOR(String numOR) {
		this.numOR = numOR;
	}

	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "mouvementFid")
	// public Set<Facture> getFactures() {
	// return this.factures;
	// }
	//
	// public void setFactures(Set<Facture> factures) {
	// this.factures = factures;
	// }

}
