package com.fr.adaming.jsfapp.model;

// Generated 13 nov. 2015 10:42:14 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fr.adaming.jsfapp.utils.IConstants;

/**
 * PackCompt generated by hbm2java
 */
@Entity
@Table(name = "pack_compt", catalog = IConstants.SCHEMA)
public class PackCompt implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 7670370360861136585L;
	private long idPackCompt;
	private String typePack;
	private Boolean FActif;
	private Set<CompteFidelite> compteFidelites = new HashSet<CompteFidelite>(0);
	private Set<PackCompt> packComptes = new HashSet<PackCompt>(0);

	public PackCompt(long idPackCompt) {
		this.idPackCompt = idPackCompt;
	}

	public PackCompt() {
	}

	public PackCompt(long idPackCompt, String typePack, Boolean fActif, Set<CompteFidelite> compteFidelites,
			Set<PackCompt> packComptes) {
		super();
		this.idPackCompt = idPackCompt;
		this.typePack = typePack;
		FActif = fActif;
		this.compteFidelites = compteFidelites;
		this.packComptes = packComptes;
	}

	@Id
	@Column(name = "ID_PACK_COMPT", unique = true, nullable = false, precision = 18, scale = 0)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public long getIdPackCompt() {
		return this.idPackCompt;
	}

	public void setIdPackCompt(long idPackCompt) {
		this.idPackCompt = idPackCompt;
	}

	@Column(name = "TYPE_PACK")
	public String getTypePack() {
		return this.typePack;
	}

	public void setTypePack(String typePack) {
		this.typePack = typePack;
	}

	@Column(name = "F_ACTIF")
	public Boolean getFActif() {
		return this.FActif;
	}

	public void setFActif(Boolean FActif) {
		this.FActif = FActif;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "packCompt")
	public Set<CompteFidelite> getCompteFidelites() {
		return this.compteFidelites;
	}

	public void setCompteFidelites(Set<CompteFidelite> compteFidelites) {
		this.compteFidelites = compteFidelites;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (idPackCompt ^ (idPackCompt >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PackCompt other = (PackCompt) obj;
		if (idPackCompt != other.idPackCompt)
			return false;
		return true;
	}

	// @Override
	// public int hashCode() {
	// final int prime = 31;
	// int result = 1;
	// result = prime * result + ((FActif == null) ? 0 : FActif.hashCode());
	// result = prime * result
	// + ((packComptes == null) ? 0 : packComptes.hashCode());
	// return result;
	// }
	//
	// @Override
	// public boolean equals(Object obj) {
	// if (this == obj)
	// return true;
	// if (obj == null)
	// return false;
	// if (getClass() != obj.getClass())
	// return false;
	// PackCompt other = (PackCompt) obj;
	// if (FActif == null) {
	// if (other.FActif != null)
	// return false;
	// } else if (!FActif.equals(other.FActif))
	// return false;
	// if (packComptes == null) {
	// if (other.packComptes != null)
	// return false;
	// } else if (!packComptes.equals(other.packComptes))
	// return false;
	// return true;
	// }

	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "packCompt")
	// public Set<PackCompt> getPackComptes() {
	// return packComptes;
	// }
	//
	// public void setPackComptes(Set<PackCompt> packComptes) {
	// this.packComptes = packComptes;
	// }

}
