package com.fr.adaming.jsfapp.model;

// Generated 13 nov. 2015 10:42:14 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fr.adaming.jsfapp.utils.IConstants;

/**
 * Marque generated by hbm2java
 */
@Entity
@Table(name = "marque", catalog = IConstants.SCHEMA)
public class Marque implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 4108093667784532173L;
	private long idMarque;
	private String libelle;
	private Boolean FActif;
	private Set<Parametre> parametres = new HashSet<Parametre>(0);
	private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);
	private Set<CompteFidelite> compteFidelites = new HashSet<CompteFidelite>(0);

	public Marque() {
	}

	public Marque(long idMarque) {
		this.idMarque = idMarque;
	}

	public Marque(long idMarque, String libelle, Boolean FActif, Set<Parametre> parametres,
			Set<Utilisateur> utilisateurs, Set<CompteFidelite> compteFidelites) {
		this.idMarque = idMarque;
		this.libelle = libelle;
		this.FActif = FActif;
		this.parametres = parametres;
		this.utilisateurs = utilisateurs;
		this.compteFidelites = compteFidelites;
	}

	@Id
	@Column(name = "ID_MARQUE", unique = true, nullable = false, precision = 18, scale = 0)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public long getIdMarque() {
		return this.idMarque;
	}

	public void setIdMarque(long idMarque) {
		this.idMarque = idMarque;
	}

	@Column(name = "LIBELLE", length = 50)
	public String getLibelle() {
		return this.libelle;
	}

	public void setLibelle(String libelle) {
		this.libelle = libelle;
	}

	@Column(name = "F_ACTIF")
	public Boolean getFActif() {
		return this.FActif;
	}

	public void setFActif(Boolean FActif) {
		this.FActif = FActif;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "marque")
	public Set<Parametre> getParametres() {
		return this.parametres;
	}

	public void setParametres(Set<Parametre> parametres) {
		this.parametres = parametres;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "marque")
	public Set<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "marque")
	public Set<CompteFidelite> getCompteFidelites() {
		return this.compteFidelites;
	}

	public void setCompteFidelites(Set<CompteFidelite> compteFidelites) {
		this.compteFidelites = compteFidelites;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((FActif == null) ? 0 : FActif.hashCode());
		result = prime * result + (int) (idMarque ^ (idMarque >>> 32));
		result = prime * result + ((libelle == null) ? 0 : libelle.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Marque other = (Marque) obj;
		if (FActif == null) {
			if (other.FActif != null)
				return false;
		} else if (!FActif.equals(other.FActif))
			return false;
		if (idMarque != other.idMarque)
			return false;
		if (libelle == null) {
			if (other.libelle != null)
				return false;
		} else if (!libelle.equals(other.libelle))
			return false;
		return true;
	}

}
